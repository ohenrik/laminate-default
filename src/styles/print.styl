/* this stylesheet is used when generating a PDF with PrinceXML or any other tool that understands the CSS used. */
/* define a page */
@page {
   size: A4;
   margin: 60pt 32pt 38pt;
   padding: 20pt 0pt;
   counter-reset: footnote;
}

img {
  max-width: 100%;
}

/* styles for the right hand spread
Bottom left we display the title of the book, bottom right the page using a CSS counter, top right the content of the current chapter */
sides = right,left
all_top=top-left-corner,top-left,top-center,top-right,top-right-corner
all_bottom=bottom-right-corner,bottom-right,bottom-center,bottom-left,bottom-left-corner
all_left = left-top,left-middle,left-bottom
all_right = right-top,right-middle,right-bottom

default_top(content = ' ', corner=false)
  content: content
  color: #333;
  font-family: 'Lato', sans-serif;
  font-size: 10pt;
  vertical-align: bottom;
  padding-bottom: 10pt;
  if corner == false
    border-bottom: 0.25pt solid #333;

default_bottom(content = ' ', corner=false)
  content: content
  font-family: 'Lato', sans-serif;
  font-size: 10pt;
  vertical-align: middle;
  if corner == false
    border-top: 0.25pt solid #333;


for side in sides
  @page:{side}
    for item in all_top
      @{item}
        if item == top-right-corner || top-left-corner
          default_top(corner=true)
        else
          default_top()

    for item in all_left
      @{item} {
        content: ' '
      }
    for item in all_right
      @{item} {
        content: ' '
      }
    for item in all_bottom
      @{item}
        if item == top-right-corner || top-left-corner
          default_bottom(corner=true)
        else
          default_bottom()

@page :right {
   @bottom-right {
       default_bottom(counter(page))
   }
   @top-right {
       default_top(string(doctitle));
   }
}
@page :left {
   @bottom-left {
       default_bottom(counter(page))
   }
   @top-left {
       default_top(string(doctitle));
   }
}

/* reset chapter and figure counters on the body */
body {
	counter-reset: chapternum figurenum;
}

/* get the title of the current chapter - this will be the content of the h1
reset figure counter as figures start from 1 in each chapter */
h1 {
    string-set: doctitle content();
    page-break-before: always;
    counter-reset: figurenum;
    line-height: 1.3;
}

/* increment chapter counter */
h1.chapter:before {
    counter-increment: chapternum;
    content: counter(chapternum) ". ";
}

/* increment and display figure counter */
figcaption:before {
	counter-increment: figurenum;
	content: counter(chapternum) "-" counter(figurenum) ". ";
}

/* footnotes */
.fn {
  display: prince-footnote;
  float: inline-footnote;
  float: bottom;
  counter-increment: footnote;
}

.fn::footnote-call {
  content: counter(footnote);
  font-size: 9pt;
  vertical-align: super;
  line-height: none;
}

.fn::footnote-marker {
  font-weight: bold;
}

@page {
  @footnotes {
    margin-top: 10pt;
    padding: 10pt 10pt 10pt 30pt;
    background-color: #F3F3F3;
  }
}

h1,h2,h3,h4,h5,h6 {
	page-break-after: avoid;
	page-break-inside:avoid;
}

h1+p, h2+p, h3+p, h4+p, h5+p, h6+p {
	page-break-before: avoid;
}

table, figure {
	page-break-inside: avoid;
}

ul.toc {
	list-style: none;
	margin: 0;
	padding: 0;
}

/* create page numbers using target-counter in the TOC */
ul.toc a::after {
  content: leader('.') target-counter(attr(href), page);
}

ul.toc li {
	line-height: 2;
}

ul.toc li a {
	text-decoration: none;
}

a {
	color: #000;
}

/* add page number to cross references */
a.xref:after {
  content: " (page " target-counter(attr(href, url), page) ")";
}
